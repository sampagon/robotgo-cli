name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'  # Only run on version tags (e.g., v1.0.0)

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [linux, windows]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.20

      - name: Download dependencies
        run: go mod download

      # Install Windows cross-compiler if building for Windows.
      - name: Install MinGW for Windows
        if: matrix.target == 'windows'
        run: sudo apt-get update && sudo apt-get install -y gcc-mingw-w64-x86-64

      - name: Build binary
        env:
          CGO_ENABLED: 1
          GOOS: ${{ matrix.target }}
          GOARCH: amd64
          # For Windows, set CC to the mingw cross-compiler.
          CC: ${{ matrix.target == 'windows' && 'x86_64-w64-mingw32-gcc' || '' }}
        run: |
          if [ "${{ matrix.target }}" = "windows" ]; then
            go build -o robotgo-cli.exe main.go
          else
            go build -o robotgo-cli main.go
          fi

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: robotgo-cli-${{ matrix.target }}
          path: ${{ matrix.target == 'windows' && 'robotgo-cli.exe' || 'robotgo-cli' }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Linux Artifact
        uses: actions/download-artifact@v3
        with:
          name: robotgo-cli-linux
          path: artifacts/linux

      - name: Download Windows Artifact
        uses: actions/download-artifact@v3
        with:
          name: robotgo-cli-windows
          path: artifacts/windows

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Linux Binary to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/linux/robotgo-cli
          asset_name: robotgo-cli-linux
          asset_content_type: application/octet-stream

      - name: Upload Windows Binary to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/windows/robotgo-cli.exe
          asset_name: robotgo-cli-windows.exe
          asset_content_type: application/octet-stream
